#!/bin/bash

# ============================================================================
#SBATCH --uenv=icon/25.2:v3:/user-environment
#SBATCH --view=default
#SBATCH --job-name=EXCLAIM_COUPLED_R02B07
#SBATCH --output=LOG.EXCLAIM_COUPLED_R02B07.%j
#SBATCH --error=LOG.EXCLAIM_COUPLED_R02B07.%j
#SBATCH --nodes=4
#SBATCH --ntasks-per-node=8
#SBATCH --time=00:15:00
#SBATCH --exclusive
#SBATCH --account=cwd01
# ============================================================================

set -x

# ============================================================================
# CAUTION
# - Restart mechanism not implemented
# - Only initialiseOcean="fromClimatology" case

# ============================================================================
# Settings

# Get runscript path
# ------------------
RUNSCRIPT_DIR=$(cd $(dirname "$(scontrol show job "$SLURM_JOB_ID" | awk -F= '/Command=/{print $2}')"); pwd)

# Load Auxiliary functions
# ------------------------
source ../run_utils/run_tools.sh
source namelists.sh
source inputs.sh

# Target architecture
# -------------------
if [[ "$#" -lt 1 ]]; then
    echo "ERROR: ${0} requires at least one argument for the target architecture"
    echo "       which must be either 'cpu', 'cpu-cpu' or 'hybrid'"
    exit 1
fi
if [[ "${1}" != "cpu" ]] && [[ "${1}" != "cpu-cpu" ]] && [[ "${1}" != "hybrid" ]]; then
    echo "ERROR: ${0} single argument must be either 'cpu', 'cpu-cpu' or hybrid'"
    exit 1
fi
TARGET="${1}"
RUN_OPTIONS="${2-}"

# Experiment name
# ---------------
export EXPNAME=${EXPNAME:-"EXCLAIM_coupled_${TARGET}"}

# Base ICON directory
# -------------------
export basedir=${basedir:-"${RUNSCRIPT_DIR}/../../icon-hybrid"}

# Executables
# -----------
export icon_cpu=${icon_cpu:-"${basedir}/build-cpu/bin/icon"}
export icon_gpu=${icon_gpu:-"${basedir}/build-gpu/bin/icon"}

# Grids
# -----
atmos_gridID="0061"             #  icon-nwp grid
atmos_refinement="R02B07"
ocean_gridID="0062"             #  icon-oce r2b7 grid
ocean_refinement="R02B07"

# Input data directories
# ----------------------
clim_data_poolFolder="/capstor/store/cscs/userlab/cws01/pool/data/ICON/grids/public/mpim"
icon_data_poolFolder="/capstor/store/cscs/userlab/cws01/pool/data/ICON/grids/public/mpim"
atmo_data_InputFolder="${clim_data_poolFolder}/${atmos_gridID}"
atmos_grid_folder="${icon_data_poolFolder}/${atmos_gridID}"
ocean_grid_folder="${icon_data_poolFolder}/${ocean_gridID}"

# Dates and intervals
# -------------------
export start_date=${start_date:-"1979-01-01T00:00:00Z"}
export end_date=${end_date:-"1979-01-01T02:00:00Z"}
export restart_interval=${restart_interval:-"P1M"}
export checkpoint_interval=${checkpoint_interval:-"${restart_interval}"}
#duplicates
atm_file_interval="P1Y"
oce_file_interval="P1Y"

start_year=${start_date%%-*}
end_year=${end_date%%-*}

# Time steps
# ----------
atmTimeStep="PT150S"            # atmos time step (for coupler)  (same as dtime!!)
dtime=150                       # NWP atmospheric timestep (s)   (same as in atmTimeStep!!)
dt_rad=300.                     # NWP radiation timestep (s) - must match coupling/ocean time step
oceTimeStep="PT5M"              # corresponds to "fromClimatology" case, ocean time step (20min for r2b7)
atm_oce_coupling_timestep="PT10M"     # coupling time step atm<->oce (for ocets pt20m and atmts=PT450S)

# Task distribution
# -----------------
case "${TARGET}" in
    "hybrid")
        N_OCE_TASKS_PER_NODE=4
        N_ATM_TASKS_PER_NODE=4
        ;;
    "cpu" | "cpu-cpu")
        N_OCE_TASKS_PER_NODE=9
        ((N_ATM_TASKS_PER_NODE = 288 - N_OCE_TASKS_PER_NODE))
        ;;
    *)
        echo "ERROR: target architecture must either be 'hybrid' or 'cpu'"
        exit 1
        ;;
esac
ATM_IO_TASKS=1
OCE_IO_TASKS=1
ATM_RST_TASKS=0
OCE_RST_TASKS=0

# output interval
#all_output_interval="PT30M"    # short test
all_output_interval="PT60M"     # short test
#all_output_interval="P1D"      # daily output
#all_output_interval="PT300S"      # monthly output - production

# Type of experiment
# ------------------
#NB change to include options for historical control and year selection.
export exptype=${exptype:-"control"} #"picontrol" # "hist"
control_year=1979 #will not change hardcoded ghg concentrations, only file names
initialiseOcean="fromClimatology"    # ocean is setup from climatology, atmosphere + hdext cold-started from scratch

# namelist files
# --------------
master_namelist="icon_master.namelist"
atm_namelist="NAMELIST_${EXPNAME}_atm"
oce_namelist="NAMELIST_${EXPNAME}_oce"
lnd_namelist="NAMELIST_${EXPNAME}_lnd"

# Coupling settings
# -----------------
atm_lag=1
oce_lag=1

# Atmosphere settings
# -------------------
case "${TARGET}" in
    "hybrid")
        nproma_atm=83752
        nproma_sub=10469
        ecrad_isolver=2  # (0 for CPU/vector, 2 for GPU)
        ;;
    "cpu" | "cpu-cpu")
        nproma_atm=16
        nproma_sub=16
        ecrad_isolver=0  # (0 for CPU/vector, 2 for GPU)
        ;;
esac

atmo_model_equations=3 # equation system
#                     1=hydrost. atm. (T dynamics)
#                     2=hydrost. atm. (theta dynamics)
#                     3=non-hydrost. atm.,
#                    -1=shallow water model
#                    -2=hydrost. ocean

nlev=120          # nlev = number of full levels
iforcing=3        # 3 for inwp forcing; 0 for no forcing
atmos_grid_target="icon_grid_${atmos_gridID}_${atmos_refinement}_G.nc"

# FIXME: unsued variables: ighg1, ighg2, irad_aero
case "${exptype}" in
    "control")
        irad_aero=12
        ighg1=2    # const. vert. prof. of GHGs defined with vmr_* for CO2, O2, CFC11, CFC12
        ighg2=3    # tanh-profile with surface concentration given by vmr_ch4/n2o for CH4, N2O
    ;;
    "picontrol")
        irad_aero=12
        ighg1=2    # const. vert. prof. of GHGs defined with vmr_* for CO2, O2, CFC11, CFC12
        ighg2=3    # tanh-profile with surface concentration given by vmr_ch4/n2o for CH4, N2O
    ;;
    *)
        irad_aero=18 # background aero. from Kinne + volcanic aero. + anthropogenic aero. from Simple Plume
        ighg1=4    # greenhouse gases from external file
        ighg2=4    # greenhouse gases from external file
        ;;
esac

atm_file_interval="P1M"
atm_output_interval=${all_output_interval}
atm_hfreq_output_interval="PT6H"

# Ocean settings
# --------------
nproma_oce=16
ocean_grid_target="icon_grid_${ocean_gridID}_${ocean_refinement}_O.nc"
VERT_COR=1
ocean_vertical_levels="L72"
use_hamocc="no"
oce_file_interval="P1M"
oce_output_interval=${all_output_interval}
oce_output_interval_def="P1D"
start_fx=${start_date}  # output time of geometry file fx

# Activate output streams
# -----------------------
activate_output="true"
# activate_output="false"
#activate_output_dyamond="true"
activate_output_dyamond="false"

# ============================================================================
# Input files
atm_inputs
lnd_inputs
oce_inputs

# ============================================================================
# Config files
compute_tasks_distribution ${RUN_OPTIONS}
set_ocean_vertical_coordinate

icon_master_nml
coupling_yaml
atmo_nml
lnd_nml
oce_nml

if [[ "${activate_output}" == "true" ]];then
    # Atmosphere / Land
    # -----------------
    output_atm_mon
    output_atm_2d
    output_energy_budget
    output_atm_hfreq
    output_atm_3d
    output_atm_latlon
    # output_atm_icon
    # output_atm_spot
    output_jsb_2d
    output_lnd_mon
    # output_lnd_dbg
    # output_hyd_dbg
    # output_lnd_wat
    # output_atm_alb

    # Ocean
    # -----
    output_oce_fx
    output_oce_def
    output_oce_ice
    output_oce_flux
    output_oce_mon
    output_oce_moc
fi
# Dyamond output streams. Comment out to deactivate
if [ "${activate_output_dyamond}" == "true" ]; then
    output_stream_1_1
    output_stream_1_2
    output_stream_1_3
    output_stream_1_4
    output_stream_1_5
    output_stream_2
    output_stream_3 
    output_stream_4
    output_stream_5
    output_stream_6
    output_stream_7
    output_stream_8
    output_stream_9
    output_stream_10
    output_stream_11
    output_stream_12
    output_stream_13
    output_stream_14
    #output_stream_15_1
    #output_stream_15_2
    #output_stream_15_3
    #output_stream_15_4
    #output_stream_15_5
    #output_stream_15_6
    #output_stream_15_7
    #output_stream_15_8
    #output_stream_15_9
    #output_stream_15_10
    #output_stream_15_11
    #output_stream_15_12
    #output_stream_15_13
fi


# ============================================================================
# Executables
ln -sf ${icon_cpu} icon_cpu
ln -sf ${icon_gpu} icon_gpu

echo "ICON shared object dependencies"
ldd ${icon_cpu}
ldd ${icon_gpu}

# ============================================================================
# Run

# Run environment
# ---------------
set_environment

# MPI run
# -------
run_model
